syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";

package farm_ng.v1;
option go_package = "github.com/farm-ng/genproto";

message Event {
  google.protobuf.Timestamp stamp = 1;
  string name = 2;
  google.protobuf.Any data = 3;
  google.protobuf.Timestamp recv_stamp = 4;
}

message Subscription {
  // A regular expression that acts as a filter on event names.
  // Scans the entire event name for a match (i.e. re.search, not re.match).
  // Should only use regex syntax supported by the standard regex library in all implementation languages.
  string name = 1;
}

message Announce {
  string host = 1;
  int32 port = 2;
  string service = 3;
  google.protobuf.Timestamp stamp = 4;
  google.protobuf.Timestamp recv_stamp = 5;

  // Defines a subset of eventbus traffic that this service wishes to receive.
  // Multiple subscriptions are combined via union, not intersection.
  repeated Subscription subscriptions = 6;
}

message LoggingCommand {
  message RecordStop {}
  message RecordStart {
    enum Mode { MODE_UNSPECIFIED = 0; MODE_ALL_MESSAGES = 1; }
    // log name, location on disk is determined by this.
    string archive_path = 1;
    Mode mode = 2;
  }

  oneof command {
    RecordStop record_stop = 3;
    RecordStart record_start = 1;
  }
}

message LoggingStatus {
  message Stopped {}

  message Recording {
    // Log name
    string archive_path = 1;
    // Where on disk the log is located
    string path = 2;
    // Number of messages recorded
    int64 n_messages = 3;
    // Timestamp of the when the log started recording
    google.protobuf.Timestamp stamp_begin = 4;
  }

  oneof state {
    Stopped stopped = 3;
    Recording recording = 2;
  }
}
